" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
" set the runtime path to include fzf
set rtp+=~/.fzf

call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
Plugin 'neomake/neomake'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-rhubarb'

Plugin 'junegunn/fzf'

Plugin 'vim-syntastic/syntastic'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-eunuch'
Plugin 'tpope/vim-rails'
Plugin 'vim-ruby/vim-ruby'
Plugin 'kchmck/vim-coffee-script'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-rake'
Plugin 'isRuslan/vim-es6'
Plugin 'mustache/vim-mustache-handlebars'

Plugin 'pbrisbin/vim-mkdir'
Plugin 'janko-m/vim-test'
Plugin 'editorconfig/editorconfig-vim'

call vundle#end()            " required
filetype plugin indent on    " required

" Run NeoMake on read and write operations
autocmd! BufReadPost,BufWritePost * Neomake

let g:neomake_serialize = 1
let g:neomake_serialize_abort_on_error = 1

" Colors and Syntax
syntax on
colorscheme hybrid
set background=dark
let g:hybrid_custom_term_colors = 1
let g:hybrid_reduced_contrast = 1 " Remove this line if using the default palette.
set guifont=Hack:h13
set colorcolumn=90

" Airline
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '#'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''

" airline customization
let g:airline_theme = 'tomorrow'
let g:airline_powerline_fonts = 0
let g:airline_section_y='' " hide encoding, format
function! AirlineInit()
  call airline#parts#define_raw('linenr', (g:airline_symbols.linenr) . '%l')
  call airline#parts#define_raw('charnr', '%c')
  let g:airline_section_z=airline#section#create(['linenr', ':', 'charnr']) " hide percentage, show line number and col number
endfunction
autocmd VimEnter * call AirlineInit()

" use fancy cursor
if has('nvim')
  let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1
endif

set cursorline
set expandtab
set modelines=0
set shiftwidth=2
set clipboard=unnamed
set synmaxcol=128
if !has('nvim')
  set ttyscroll=10
endif
set encoding=utf-8
set tabstop=2
set wrap
set number
set expandtab
set nowritebackup
set noswapfile
set nobackup
set hlsearch
set ignorecase
set smartcase

" splits
set splitright " open vsplit on the right
set splitbelow " open split below current

" set directory for undofiles
" allows for history after a file has been closed
set undofile
set undodir=~/.vim/undodir

" Tab between buffers
noremap <tab> <c-w><c-w>

" bind ctrl-p to FZF
map <C-p> :FZF <enter>

" Syntastic
" Disable inherited syntastic
let g:syntastic_mode_map = {
  \ "mode": "passive",
  \ "active_filetypes": [],
  \ "passive_filetypes": [] }

let g:syntastic_ruby_checkers = ['mri', 'rubocop']
let g:syntastic_ruby_exec = '/.rvm/bin/rvm-auto-ruby'
let g:syntastic_loc_list_height=5
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
